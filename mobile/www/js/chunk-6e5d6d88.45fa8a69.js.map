{"version":3,"sources":["webpack:///./src/views/calculators/calculator1.vue?55b0","webpack:///src/views/calculators/calculator1.vue","webpack:///./src/views/calculators/calculator1.vue?3839","webpack:///./src/views/calculators/calculator1.vue","webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./src/views/calculators/calculator1.vue?21d7","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","model","value","inRecipe","callback","$$v","$set","expression","_l","type","field","id","key","label","isError","on","$event","count","trim","inUse","clear","directives","name","rawName","result","_s","toBe","performed","staticRenderFns","component","toInteger","requireObjectCoercible","module","exports","repeat","str","String","n","Infinity","RangeError","classof","TypeError","$","thisNumberValue","fails","nativeToFixed","toFixed","floor","Math","pow","x","acc","log","x2","FORCED","call","target","proto","forced","fractionDigits","e","z","j","k","number","fractDigits","data","sign","multiply","c","index","c2","divide","dataToString","s","t","length","slice"],"mappings":"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","file":"js/chunk-6e5d6d88.45fa8a69.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"inner\"},[_c('div',{staticClass:\"calc white-wrapper\"},[_c('h2',{staticClass:\"title\"},[_vm._v(\"Калькулятор перерасчета ингредиентов при выпечке\")]),_c('p',{staticClass:\"calc__text\"},[_vm._v(\"Как перерасчитать количество ингредиентов в зависимости от формы.\")]),_c('div',{staticClass:\"calc__in-recipe\"},[_c('p',{staticClass:\"calc__title\"},[_vm._v(\"1. В рецепте используется\")]),_c('div',{staticClass:\"calc__form\"},[_c('checkbox',{staticClass:\"calc__check\",attrs:{\"label\":\"Круглая форма\",\"type\":\"radio\",\"name\":\"in-recipe-type\",\"val\":\"round\"},model:{value:(_vm.inRecipe.type),callback:function ($$v) {_vm.$set(_vm.inRecipe, \"type\", $$v)},expression:\"inRecipe.type\"}}),_c('checkbox',{staticClass:\"calc__check\",attrs:{\"label\":\"Прямоугольная форма\",\"type\":\"radio\",\"name\":\"in-recipe-type\",\"val\":\"square\"},model:{value:(_vm.inRecipe.type),callback:function ($$v) {_vm.$set(_vm.inRecipe, \"type\", $$v)},expression:\"inRecipe.type\"}})],1),_c('div',{staticClass:\"calc__row\"},_vm._l((_vm.inRecipe[_vm.inRecipe.type]),function(field,id){return _c('input_box',{key:id,attrs:{\"type\":\"number\",\"label\":field.label,\"isError\":field.isError},on:{\"enter\":function($event){return _vm.count()}},model:{value:(field.value),callback:function ($$v) {_vm.$set(field, \"value\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"field.value\"}})}),1)]),_c('div',{},[_c('p',{staticClass:\"calc__title\"},[_vm._v(\"2. У меня имеется\")]),_c('div',{staticClass:\"calc__form\"},[_c('checkbox',{staticClass:\"calc__check\",attrs:{\"label\":\"Круглая форма\",\"type\":\"radio\",\"name\":\"in-use-type\",\"val\":\"round\"},model:{value:(_vm.inUse.type),callback:function ($$v) {_vm.$set(_vm.inUse, \"type\", $$v)},expression:\"inUse.type\"}}),_c('checkbox',{staticClass:\"calc__check\",attrs:{\"label\":\"Прямоугольная форма\",\"type\":\"radio\",\"name\":\"in-use-type\",\"val\":\"square\"},model:{value:(_vm.inUse.type),callback:function ($$v) {_vm.$set(_vm.inUse, \"type\", $$v)},expression:\"inUse.type\"}})],1),_c('div',{staticClass:\"calc__row\"},_vm._l((_vm.inUse[_vm.inUse.type]),function(field,id){return _c('input_box',{key:id,attrs:{\"type\":\"number\",\"label\":field.label,\"isError\":field.isError},on:{\"enter\":function($event){return _vm.count()}},model:{value:(field.value),callback:function ($$v) {_vm.$set(field, \"value\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"field.value\"}})}),1)]),_c('div',{staticClass:\"calc__buttons\"},[_c('button_box',{staticClass:\"calc__btn\",attrs:{\"title\":\"Рассчитать\",\"color\":\"Yellow\"},on:{\"click\":_vm.count}}),_vm._v(\" \"),_c('button_box',{staticClass:\"calc__btn\",attrs:{\"title\":\"Очистить форму\",\"color\":\"Grey\"},on:{\"click\":_vm.clear}})],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.performed),expression:\"result.performed\"}],staticClass:\"result\"},[_c('p',{staticClass:\"result__number\"},[_vm._v(\"КОЭФФИЦИЕНТ = \"+_vm._s(_vm.result.value))]),_c('p',{staticClass:\"result__explain\"},[_vm._v(\"Для того, чтобы мой бисквит был \"+_vm._s(_vm.result.toBe)+\" и такой же высоты как в исходном рецепте, мне следует вес всех ингредиентов умножить на \"),_c('span',[_vm._v(_vm._s(_vm.result.value))])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.performed),expression:\"!result.performed\"}],staticClass:\"result\"},[_c('p',{staticClass:\"result__number\"},[_vm._v(\"Введите данные для рассчета\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"inner\">\n        <div class=\"calc white-wrapper\">\n            <h2 class=\"title\">Калькулятор перерасчета ингредиентов при выпечке</h2>\n            <p class=\"calc__text\">Как перерасчитать количество ингредиентов в зависимости от формы.</p>\n            <div class=\"calc__in-recipe\">\n                <p class=\"calc__title\">1. В рецепте используется</p>\n                <div class=\"calc__form\">\n                    <checkbox label=\"Круглая форма\" class=\"calc__check\" v-model=\"inRecipe.type\" type=\"radio\" name=\"in-recipe-type\" val=\"round\"/>\n                    <checkbox label=\"Прямоугольная форма\" class=\"calc__check\" v-model=\"inRecipe.type\" type=\"radio\" name=\"in-recipe-type\" val=\"square\"/>\n                </div>\n                <div class=\"calc__row\">\n                    <input_box v-for=\"(field,id) in inRecipe[inRecipe.type]\" type='number' :key=\"id\" :label=\"field.label\" v-model.trim=\"field.value\" :isError=\"field.isError\" @enter=\"count()\"/>\n                </div>\n            </div>\n            <div class=\"\">\n                <p class=\"calc__title\">2. У меня имеется</p>\n                <div class=\"calc__form\">\n                    <checkbox label=\"Круглая форма\" class=\"calc__check\" v-model=\"inUse.type\" type=\"radio\" name=\"in-use-type\" val=\"round\"/>\n                    <checkbox label=\"Прямоугольная форма\" class=\"calc__check\" v-model=\"inUse.type\" type=\"radio\" name=\"in-use-type\" val=\"square\"/>\n                </div>\n                <div class=\"calc__row\">\n                    <input_box v-for=\"(field,id) in inUse[inUse.type]\" :key=\"id\" type='number' :label=\"field.label\" v-model.trim=\"field.value\" :isError=\"field.isError\" @enter=\"count()\"/>\n                </div>\n            </div>\n            <div class=\"calc__buttons\">\n                <button_box title=\"Рассчитать\" color=\"Yellow\" class=\"calc__btn\" @click=\"count\"/> <!-- Кнопка вызывает расчет -->\n                <button_box title=\"Очистить форму\" color=\"Grey\" class=\"calc__btn\" @click=\"clear\"/> <!-- Очищает поля ввода, на одном макете она есть, на  другом нет -->\n            </div>\n        </div>\n        <div v-show=\"result.performed\" class=\"result\"> <!-- блок показывается только если расчет произведен -->\n            <p class=\"result__number\">КОЭФФИЦИЕНТ = {{ result.value }}</p>\n            <p class=\"result__explain\">Для того, чтобы мой бисквит был {{ result.toBe }} и такой же высоты как в исходном рецепте, мне следует вес всех ингредиентов умножить на <span>{{ result.value }}</span> </p>\n        </div>\n        <div v-show=\"!result.performed\" class=\"result\"> <!-- блок показывается только если расчет произведен -->\n            <p class=\"result__number\">Введите данные для рассчета</p>\n        </div>\n\n    </div>\n</template>\n\n<script>\n\n    export default {\n        name: \"calculator1\",\n        data() {\n            return {\n                inRecipe: {\n                    type: 'round',\n                    round: {\n                        diameter: {\n                            label: 'Диаметром, см',\n                            value: '',\n                            isError: false,\n                            errorText: null\n                        }\n                    },\n                    square: {\n                        length: {\n                            label: 'Длиной, см',\n                            value: '',\n                            isError: false,\n                            errorText: null\n                        },\n                        width: {\n                            label: 'Шириной, см',\n                            value: '',\n                            isError: false,\n                            errorText: null\n                        }\n                    }\n                },\n                inUse: {\n                    type: 'round',\n                    round: {\n                        diameter: {\n                            label: 'Диаметром, см',\n                            value: '',\n                            isError: false,\n                            errorText: null\n                        }\n                    },\n                    square: {\n                        length: {\n                            label: 'Длиной, см',\n                            value: '',\n                            isError: false,\n                            errorText: null\n                        },\n                        width: {\n                            label: 'Шириной, см',\n                            value: '',\n                            isError: false,\n                            errorText: null\n                        }\n                    }\n                },\n                result: {\n                    value: 0,\n                    performed: false,\n                    toBe: ''\n                }\n            }\n        },\n        methods: {\n            count() {\n                let inUseArea, inRecipeArea, err = false\n\n                let getNumber = (val = 0) => {\n                    return Number(String(val).replace(/[^,\\d]/g, '') || 0)\n                }\n\n                let validateValue = val => {\n                    if (val === '' || getNumber(val) === 0) {\n                        err = true\n                        return false\n                    } else {\n                        return true\n                    }\n                }\n\n                let getArea = type => {\n                    let area = 0;\n\n                    if (this[type].type === 'round') {\n                        let diametr = getNumber(this[type].round.diameter.value || 0)\n\n                        this[type].round.diameter.isError = !validateValue(this[type].round.diameter.value)\n\n                        this[type].round.diameter.value = this[type].round.diameter.isError ? '' : String(diametr)\n\n                        area = Math.PI * Math.pow((diametr / 2), 2)\n                    } else if (this[type].type === 'square') {\n                        let length = getNumber(this[type].square.length.value || 0)\n                        let width = getNumber(this[type].square.width.value || 0)\n\n                        this[type].square.length.isError = !validateValue(this[type].square.length.value)\n                        this[type].square.width.isError = !validateValue(this[type].square.width.value)\n\n                        this[type].square.length.value = this[type].square.length.isError ? '' : String(length)\n                        this[type].square.width.value = this[type].square.width.isError ? '' : String(width)\n\n                        area = length * width\n                    }\n\n                    return area || 0\n                }\n\n                inUseArea = getArea('inUse')\n                inRecipeArea = getArea('inRecipe')\n\n                if (!err) {\n                    this.result.value = (inUseArea / inRecipeArea).toFixed(2)\n                    this.result.performed = true\n                    if (this.inUse.type === 'round') {\n                        this.result.toBe = `диаметром ${ this.inUse.round.diameter.value || 0 } см`\n                    } else {\n                        this.result.toBe =  `площадью ${ this.inUse.square.length.value || 0  } на ${ this.inUse.square.width.value || 0 } см`\n                    }\n                }\n            },\n\n            clear() {\n                ['inUse', 'inRecipe'].map(type => {\n                    ['round', 'square'].map(form => {\n                        Object.keys(this[type][form]).map(field => {\n                            this[type][form][field].value = ''\n                        })\n                    })\n                })\n                this.result.performed = false\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .white-wrapper{\n        background-color: #fff;\n        padding: 30px 40px;\n        margin-top: 20px;\n        @include media (xs){\n            margin: 0px;\n            padding: 25px 20px;\n        }\n    }\n    .calc{\n        &__text{\n            color: $color-grey-light;\n            font-size: 13px;\n            font-weight: 300;\n            line-height: 18px;\n\n        }\n        &__in-recipe{\n\n        }\n        &__title{\n            color: $color-black;\n            font-size: 16px;\n            font-weight: 500;\n            margin-top: 18px;\n        }\n        &__buttons{\n            display: flex;\n            @include media (xs){\n                flex-direction: column;\n            }\n        }\n        &__row{\n            display: flex;\n            @include media (xs){\n                flex-direction: column;\n            }\n        }\n        &__check{\n            margin: 0px 30px 0px 0px;\n        }\n        &__form{\n            @include media (xs){\n                display: flex;\n                flex-direction: column;\n            }\n        }\n        &__btn{\n        }\n    }\n\n    .result{\n\n        padding: 35px 40px;\n        margin-bottom: 50px;\n        background-color: #fff7e4;\n        &__number{\n            color: $color-black;\n            font-size: 16px;\n            font-weight: 500;\n        }\n        &__explain{\n            padding-top: 15px;\n            color: $color-black;\n            font-size: 13px;\n            line-height: 21px;\n            font-weight: 300;\n            span{\n                font-weight: 700;\n            }\n        }\n    }\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./calculator1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./calculator1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./calculator1.vue?vue&type=template&id=1df78f66&scoped=true&\"\nimport script from \"./calculator1.vue?vue&type=script&lang=js&\"\nexport * from \"./calculator1.vue?vue&type=script&lang=js&\"\nimport style0 from \"./calculator1.vue?vue&type=style&index=0&id=1df78f66&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1df78f66\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./calculator1.vue?vue&type=style&index=0&id=1df78f66&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./calculator1.vue?vue&type=style&index=0&id=1df78f66&lang=scss&scoped=true&\"","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"sourceRoot":""}